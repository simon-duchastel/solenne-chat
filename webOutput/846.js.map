{"version":3,"file":"846.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,GACtB,CATD,CASGK,YAAY,I,MCPfC,cAAc,cAEb,IAAIC,EAAK,KAQT,SAASC,IACP,MAAMC,EAAOC,KAAKD,KAElB,OAAQA,GAAQA,EAAKE,QACnB,IAAK,OACH,IAAKF,EAAU,IACb,MAAM,IAAIG,MAAM,8BAGlB,OAAOC,YAAY,CACjBC,GAAIL,EAAKK,GACTC,QAAS,CAAEC,OAAQT,EAAGU,KAAK,CAAEC,IAAKT,EAAKS,IAAKC,KAAMV,EAAKW,OAAQC,YAAa,kBAEhF,IAAK,oBACH,OAAOR,YAAY,CACjBC,GAAIL,EAAKK,GACTC,QAASR,EAAGU,KAAK,wBAErB,IAAK,kBACH,OAAOJ,YAAY,CACjBC,GAAIL,EAAKK,GACTC,QAASR,EAAGU,KAAK,sBAErB,IAAK,uBACH,OAAOJ,YAAY,CACjBC,GAAIL,EAAKK,GACTC,QAASR,EAAGU,KAAK,2BAErB,QACE,MAAM,IAAIL,MAAM,uBAAuBH,GAAQA,EAAKE,UAE1D,CAEA,SAASW,EAAYC,GACnB,OAAOV,YAAY,CACjBC,GAAIJ,KAAKD,KAAKK,GACdU,MAAOD,GAEX,CAEA,GAA6B,mBAAlBjB,cAA8B,CACvCC,EAAK,KACL,MAAMkB,EAhDRC,iBACE,MAAMC,QAAgBC,oBAEtBrB,EAAK,IAAIoB,EAAQE,IAAIC,GAAG,4BAA6B,IACvD,CA4CyBC,GACvBC,KAAKC,UAAaC,GACTT,EAAeU,KAAK3B,EAAcW,KAAKe,IAC7CE,MAAMd,EAAYH,KAAKe,GAE5B,C","sources":["webpack://composeApp/webpack/universalModuleDefinition","webpack://composeApp/./kotlin/sqlite.worker.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"composeApp\"] = factory();\n\telse\n\t\troot[\"composeApp\"] = factory();\n})(globalThis, () => {\nreturn ","// Courtesy of @IlyaGulya:\n// https://github.com/IlyaGulya/TodoAppDecomposeMviKotlin/blob/fd6d535783f55bdf2ce5494768a0520acd27a7dd/web/src/jsMain/resources/sqlite.worker.js#L4\nimportScripts(\"sqlite3.js\");\n\n let db = null;\n\n async function createDatabase() {\n   const sqlite3 = await sqlite3InitModule();\n\n   db = new sqlite3.oo1.DB(\"file:database.db?vfs=opfs\", \"c\");\n }\n\n function handleMessage() {\n   const data = this.data;\n\n   switch (data && data.action) {\n     case \"exec\":\n       if (!data[\"sql\"]) {\n         throw new Error(\"exec: Missing query string\");\n       }\n\n       return postMessage({\n         id: data.id,\n         results: { values: db.exec({ sql: data.sql, bind: data.params, returnValue: \"resultRows\" }) },\n       })\n     case \"begin_transaction\":\n       return postMessage({\n         id: data.id,\n         results: db.exec(\"BEGIN TRANSACTION;\"),\n       })\n     case \"end_transaction\":\n       return postMessage({\n         id: data.id,\n         results: db.exec(\"END TRANSACTION;\"),\n       })\n     case \"rollback_transaction\":\n       return postMessage({\n         id: data.id,\n         results: db.exec(\"ROLLBACK TRANSACTION;\"),\n       })\n     default:\n       throw new Error(`Unsupported action: ${data && data.action}`);\n   }\n }\n\n function handleError(err) {\n   return postMessage({\n     id: this.data.id,\n     error: err,\n   });\n }\n\n if (typeof importScripts === \"function\") {\n   db = null;\n   const sqlModuleReady = createDatabase();\n   self.onmessage = (event) => {\n     return sqlModuleReady.then(handleMessage.bind(event))\n     .catch(handleError.bind(event));\n   }\n }"],"names":["root","factory","exports","module","define","amd","globalThis","importScripts","db","handleMessage","data","this","action","Error","postMessage","id","results","values","exec","sql","bind","params","returnValue","handleError","err","error","sqlModuleReady","async","sqlite3","sqlite3InitModule","oo1","DB","createDatabase","self","onmessage","event","then","catch"],"sourceRoot":""}