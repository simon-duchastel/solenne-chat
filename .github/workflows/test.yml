name: Run Tests and Build Web

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run all tests
        run: ./gradlew allTest
        env:
          GITHUB_ACTOR: simon-duchastel
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            composeApp/build/reports/tests/
            build/reports/tests/

  build_and_deploy_wasm:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for full history for merge

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build browser distribution
        run: ./gradlew wasmJsBrowserDistribution
        env:
          GITHUB_ACTOR: simon-duchastel
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

      - name: Set up Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Checkout releases branch and merge main
        run: |
          git fetch origin
          git checkout releases
          git merge origin/main

      - name: Replace webOutput with new build
        run: |
          rm -rf webOutput
          mkdir -p webOutput
          cp -r composeApp/build/dist/wasmJs/productionExecutable/* webOutput/

      - name: Add _headers file
        run: |
          echo '/*' > webOutput/_headers
          echo '  Cross-Origin-Opener-Policy: same-origin' >> webOutput/_headers
          echo '  Cross-Origin-Embedder-Policy: require-corp' >> webOutput/_headers

      - name: Commit and push webOutput
        run: |
          git add webOutput
          git commit -m "Update release"
          git push origin releases
        env:
          GITHUB_ACTOR: simon-duchastel
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}